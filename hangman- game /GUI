import tkinter as tk
from tkinter import messagebox
import random

class HangmanGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Hangman Game")

        self.words = ["python", "hangman", "programming", "developer", "learning", "challenge"]
        self.secret_word = ""
        self.guessed_letters = set()

        self.canvas = tk.Canvas(root, width=400, height=400)
        self.canvas.grid(row=0, column=0, columnspan=2, pady=10)

        self.word_label = tk.Label(root, text="", font=("Helvetica", 18))
        self.word_label.grid(row=1, column=0, columnspan=2)

        self.attempts_label = tk.Label(root, text="Attempts left: 6", font=("Helvetica", 12))
        self.attempts_label.grid(row=2, column=0, columnspan=2)

        self.entry_var = tk.StringVar()
        self.entry = tk.Entry(root, textvariable=self.entry_var, font=("Helvetica", 14), width=5)
        self.entry.grid(row=3, column=0, padx=5)

        self.guess_button = tk.Button(root, text="Guess", command=self.make_guess, font=("Helvetica", 12))
        self.guess_button.grid(row=3, column=1, padx=5)

        self.hangman_parts = [
            (50, 350, 350, 350),  
            (200, 350, 200, 100),  
            (200, 100, 100, 100),  
            (100, 100, 100, 150),  
            (100, 160, 130, 190),  
            (100, 250, 70, 190),   
            (100, 215, 130, 190),  
            (100, 250, 130, 240),  
            (100, 250, 70, 280),   
            (100, 250, 130, 280)   
        ]

        self.start_new_game()

    def start_new_game(self):
        self.secret_word = random.choice(self.words)
        self.guessed_letters = set()
        self.incorrect_attempts = 0
        self.update_word_display()
        self.draw_canvas()

    def update_word_display(self):
        display = ""
        for letter in self.secret_word:
            if letter in self.guessed_letters:
                display += letter + " "
            else:
                display += "_ "
        self.word_label.config(text=display.strip())

    def make_guess(self):
        guess = self.entry_var.get().lower()
        self.entry_var.set("")

        if guess.isalpha() and len(guess) == 1:
            if guess in self.guessed_letters:
                self.show_message("You already guessed that letter. Try again.")
            elif guess in self.secret_word:
                self.guessed_letters.add(guess)
                self.update_word_display()
                if set(self.secret_word) <= self.guessed_letters:
                    self.show_message("Congratulations! You guessed the word.")
                    self.start_new_game()
            else:
                self.incorrect_attempts += 1
                self.draw_canvas()
                self.show_message(f"Incorrect guess. Attempts left: {6 - self.incorrect_attempts}")
                if self.incorrect_attempts == 6:
                    self.show_message(f"Sorry, you ran out of attempts. The word was: {self.secret_word}")
                    self.start_new_game()
        else:
            self.show_message("Invalid input. Please enter a single letter.")

    def draw_canvas(self):
        self.canvas.delete("all")
        for i in range(self.incorrect_attempts):
            part = self.hangman_parts[i]
            self.canvas.create_line(part, width=5, fill="black")

    def show_message(self, message):
        messagebox.showinfo("Hangman", message)

if __name__ == "__main__":
    root = tk.Tk()
    hangman_game = HangmanGame(root)
    root.mainloop()
